{"message":"use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":456,"byte_end":470,"line_start":20,"line_end":20,"column_start":48,"column_end":62,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":48,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(deprecated)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:20:48\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(deprecated)]` on by default\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":472,"byte_end":486,"line_start":20,"line_end":20,"column_start":64,"column_end":78,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":64,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:20:64\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":2922,"byte_end":2936,"line_start":129,"line_end":129,"column_start":48,"column_end":62,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":48,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:129:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":2938,"byte_end":2952,"line_start":129,"line_end":129,"column_start":64,"column_end":78,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":64,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:129:64\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m129\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":7359,"byte_end":7373,"line_start":327,"line_end":327,"column_start":48,"column_end":62,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":48,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:327:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m327\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":7375,"byte_end":7389,"line_start":327,"line_end":327,"column_start":64,"column_end":78,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":64,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:327:64\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m327\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":9802,"byte_end":9816,"line_start":439,"line_end":439,"column_start":48,"column_end":62,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":48,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:439:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m439\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":9818,"byte_end":9832,"line_start":439,"line_end":439,"column_start":64,"column_end":78,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":64,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:439:64\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m439\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":10615,"byte_end":10629,"line_start":476,"line_end":476,"column_start":48,"column_end":62,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":48,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:476:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m476\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":10631,"byte_end":10645,"line_start":476,"line_end":476,"column_start":64,"column_end":78,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":64,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:476:64\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m476\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":13776,"byte_end":13790,"line_start":630,"line_end":630,"column_start":48,"column_end":62,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":48,"highlight_end":62}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcDecodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:630:48\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m630\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/lib.rs","byte_start":13792,"byte_end":13806,"line_start":630,"line_end":630,"column_start":64,"column_end":78,"is_primary":true,"text":[{"text":"#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]","highlight_start":64,"highlight_end":78}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `RustcEncodable`: rustc-serialize is deprecated and no longer supported\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/lib.rs:630:64\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m630\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m#[cfg_attr(feature = \"rustc-serialize\", derive(RustcDecodable, RustcEncodable))]\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/arith.rs","byte_start":4280,"byte_end":4283,"line_start":161,"line_end":161,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"            try!(s.emit_u8(buf[i]));","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/arith.rs:161:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            try!(s.emit_u8(buf[i]));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/arith.rs","byte_start":4557,"byte_end":4560,"line_start":174,"line_end":174,"column_start":22,"column_end":25,"is_primary":true,"text":[{"text":"            buf[i] = try!(s.read_u8());","highlight_start":22,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/arith.rs:174:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m174\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            buf[i] = try!(s.read_u8());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/arith.rs","byte_start":4980,"byte_end":4983,"line_start":191,"line_end":191,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"            try!(s.emit_u8(buf[i]));","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/arith.rs:191:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m191\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            try!(s.emit_u8(buf[i]));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/arith.rs","byte_start":5257,"byte_end":5260,"line_start":204,"line_end":204,"column_start":22,"column_end":25,"is_primary":true,"text":[{"text":"            buf[i] = try!(s.read_u8());","highlight_start":22,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/arith.rs:204:22\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m204\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            buf[i] = try!(s.read_u8());\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                     \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/fields/fp.rs","byte_start":1092,"byte_end":1095,"line_start":37,"line_end":37,"column_start":28,"column_end":31,"is_primary":true,"text":[{"text":"                $name::new(try!(U256::decode(s))).ok_or_else(|| s.error(\"integer is not less than modulus\"))","highlight_start":28,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"bn/src/fields/fp.rs","byte_start":5079,"byte_end":5636,"line_start":185,"line_end":212,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"field_impl!(","highlight_start":1,"highlight_end":13},{"text":"    Fr,","highlight_start":1,"highlight_end":8},{"text":"    [","highlight_start":1,"highlight_end":6},{"text":"        0x43e1f593f0000001,","highlight_start":1,"highlight_end":28},{"text":"        0x2833e84879b97091,","highlight_start":1,"highlight_end":28},{"text":"        0xb85045b68181585d,","highlight_start":1,"highlight_end":28},{"text":"        0x30644e72e131a029","highlight_start":1,"highlight_end":27},{"text":"    ],","highlight_start":1,"highlight_end":7},{"text":"    [","highlight_start":1,"highlight_end":6},{"text":"        0x1bb8e645ae216da7,","highlight_start":1,"highlight_end":28},{"text":"        0x53fe3ab1e35c59e3,","highlight_start":1,"highlight_end":28},{"text":"        0x8c49833d53bb8085,","highlight_start":1,"highlight_end":28},{"text":"        0x0216d0b17f4e44a5","highlight_start":1,"highlight_end":27},{"text":"    ],","highlight_start":1,"highlight_end":7},{"text":"    [","highlight_start":1,"highlight_end":6},{"text":"        0x5e94d8e1b4bf0040,","highlight_start":1,"highlight_end":28},{"text":"        0x2a489cbe1cfbb6b8,","highlight_start":1,"highlight_end":28},{"text":"        0x893cc664a19fcfed,","highlight_start":1,"highlight_end":28},{"text":"        0x0cf8594b7fcc657c","highlight_start":1,"highlight_end":27},{"text":"    ],","highlight_start":1,"highlight_end":7},{"text":"    [","highlight_start":1,"highlight_end":6},{"text":"        0xac96341c4ffffffb,","highlight_start":1,"highlight_end":28},{"text":"        0x36fc76959f60cd29,","highlight_start":1,"highlight_end":28},{"text":"        0x666ea36f7879462e,","highlight_start":1,"highlight_end":28},{"text":"        0xe0a77c19a07df2f","highlight_start":1,"highlight_end":26},{"text":"    ],","highlight_start":1,"highlight_end":7},{"text":"    0x6586864b4c6911b3c2e1f593efffffff","highlight_start":1,"highlight_end":39},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"field_impl!","def_site_span":{"file_name":"bn/src/fields/fp.rs","byte_start":203,"byte_end":5077,"line_start":10,"line_end":183,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! field_impl {","highlight_start":1,"highlight_end":26},{"text":"    ($name:ident, $modulus:expr, $rsquared:expr, $rcubed:expr, $one:expr, $inv:expr) => {","highlight_start":1,"highlight_end":90},{"text":"        #[derive(Copy, Clone, PartialEq, Eq, Debug)]","highlight_start":1,"highlight_end":53},{"text":"        #[repr(C)]","highlight_start":1,"highlight_end":19},{"text":"        pub struct $name(U256);","highlight_start":1,"highlight_end":32},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl From<$name> for U256 {","highlight_start":1,"highlight_end":36},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn from(mut a: $name) -> Self {","highlight_start":1,"highlight_end":44},{"text":"                a.0.mul(&U256::one(), &U256::from($modulus), $inv);","highlight_start":1,"highlight_end":68},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                a.0","highlight_start":1,"highlight_end":20},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[cfg(feature = \"rustc-serialize\")]","highlight_start":1,"highlight_end":44},{"text":"        impl Encodable for $name {","highlight_start":1,"highlight_end":35},{"text":"            fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {","highlight_start":1,"highlight_end":78},{"text":"                let normalized = U256::from(*self);","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                normalized.encode(s)","highlight_start":1,"highlight_end":37},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[cfg(feature = \"rustc-serialize\")]","highlight_start":1,"highlight_end":44},{"text":"        impl Decodable for $name {","highlight_start":1,"highlight_end":35},{"text":"            fn decode<S: Decoder>(s: &mut S) -> Result<$name, S::Error> {","highlight_start":1,"highlight_end":74},{"text":"                $name::new(try!(U256::decode(s))).ok_or_else(|| s.error(\"integer is not less than modulus\"))","highlight_start":1,"highlight_end":109},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl $name {","highlight_start":1,"highlight_end":21},{"text":"            pub fn from_str(s: &str) -> Option<Self> {","highlight_start":1,"highlight_end":55},{"text":"                let ints: Vec<_> = {","highlight_start":1,"highlight_end":37},{"text":"                    let mut acc = Self::zero();","highlight_start":1,"highlight_end":48},{"text":"                    (0..11).map(|_| {let tmp = acc; acc = acc + Self::one(); tmp}).collect()","highlight_start":1,"highlight_end":93},{"text":"                };","highlight_start":1,"highlight_end":19},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                let mut res = Self::zero();","highlight_start":1,"highlight_end":44},{"text":"                for c in s.chars() {","highlight_start":1,"highlight_end":37},{"text":"                    match c.to_digit(10) {","highlight_start":1,"highlight_end":43},{"text":"                        Some(d) => {","highlight_start":1,"highlight_end":37},{"text":"                            res = res * ints[10];","highlight_start":1,"highlight_end":50},{"text":"                            res = res + ints[d as usize];","highlight_start":1,"highlight_end":58},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        None => {","highlight_start":1,"highlight_end":34},{"text":"                            return None;","highlight_start":1,"highlight_end":41},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                Some(res)","highlight_start":1,"highlight_end":26},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            /// Converts a U256 to an Fp so long as it's below the modulus.","highlight_start":1,"highlight_end":76},{"text":"            pub fn new(mut a: U256) -> Option<Self> {","highlight_start":1,"highlight_end":54},{"text":"                if a < U256::from($modulus) {","highlight_start":1,"highlight_end":46},{"text":"                    a.mul(&U256::from($rsquared), &U256::from($modulus), $inv);","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    Some($name(a))","highlight_start":1,"highlight_end":35},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    None","highlight_start":1,"highlight_end":25},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            /// Converts a U256 to an Fr regardless of modulus.","highlight_start":1,"highlight_end":64},{"text":"            pub fn new_mul_factor(mut a: U256) -> Self {","highlight_start":1,"highlight_end":57},{"text":"                a.mul(&U256::from($rsquared), &U256::from($modulus), $inv);","highlight_start":1,"highlight_end":76},{"text":"                $name(a)","highlight_start":1,"highlight_end":25},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            pub fn interpret(buf: &[u8; 64]) -> Self {","highlight_start":1,"highlight_end":55},{"text":"                $name::new(U512::interpret(buf).divrem(&U256::from($modulus)).1).unwrap()","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            /// Returns the modulus","highlight_start":1,"highlight_end":36},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            #[allow(dead_code)]","highlight_start":1,"highlight_end":32},{"text":"            pub fn modulus() -> U256 {","highlight_start":1,"highlight_end":39},{"text":"                U256::from($modulus)","highlight_start":1,"highlight_end":37},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            #[allow(dead_code)]","highlight_start":1,"highlight_end":32},{"text":"            pub fn inv(&self) -> u128 {","highlight_start":1,"highlight_end":40},{"text":"                $inv","highlight_start":1,"highlight_end":21},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            pub fn raw(&self) -> &U256 {","highlight_start":1,"highlight_end":41},{"text":"                &self.0","highlight_start":1,"highlight_end":24},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            pub fn set_bit(&mut self, bit: usize, to: bool) {","highlight_start":1,"highlight_end":62},{"text":"                self.0.set_bit(bit, to);","highlight_start":1,"highlight_end":41},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl FieldElement for $name {","highlight_start":1,"highlight_end":38},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn zero() -> Self {","highlight_start":1,"highlight_end":32},{"text":"                $name(U256::from([0, 0, 0, 0]))","highlight_start":1,"highlight_end":48},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn one() -> Self {","highlight_start":1,"highlight_end":31},{"text":"                $name(U256::from($one))","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn random<R: Rng>(rng: &mut R) -> Self {","highlight_start":1,"highlight_end":53},{"text":"                $name(U256::random(rng, &U256::from($modulus)))","highlight_start":1,"highlight_end":64},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn is_zero(&self) -> bool {","highlight_start":1,"highlight_end":40},{"text":"                self.0.is_zero()","highlight_start":1,"highlight_end":33},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn inverse(mut self) -> Option<Self> {","highlight_start":1,"highlight_end":51},{"text":"                if self.is_zero() {","highlight_start":1,"highlight_end":36},{"text":"                    None","highlight_start":1,"highlight_end":25},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    self.0.invert(&U256::from($modulus));","highlight_start":1,"highlight_end":58},{"text":"                    self.0.mul(&U256::from($rcubed), &U256::from($modulus), $inv);","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    Some(self)","highlight_start":1,"highlight_end":31},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Add for $name {","highlight_start":1,"highlight_end":29},{"text":"            type Output = $name;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn add(mut self, other: $name) -> $name {","highlight_start":1,"highlight_end":54},{"text":"                self.0.add(&other.0, &U256::from($modulus));","highlight_start":1,"highlight_end":61},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                self","highlight_start":1,"highlight_end":21},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Sub for $name {","highlight_start":1,"highlight_end":29},{"text":"            type Output = $name;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn sub(mut self, other: $name) -> $name {","highlight_start":1,"highlight_end":54},{"text":"                self.0.sub(&other.0, &U256::from($modulus));","highlight_start":1,"highlight_end":61},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                self","highlight_start":1,"highlight_end":21},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Mul for $name {","highlight_start":1,"highlight_end":29},{"text":"            type Output = $name;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn mul(mut self, other: $name) -> $name {","highlight_start":1,"highlight_end":54},{"text":"                self.0.mul(&other.0, &U256::from($modulus), $inv);","highlight_start":1,"highlight_end":67},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                self","highlight_start":1,"highlight_end":21},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Neg for $name {","highlight_start":1,"highlight_end":29},{"text":"            type Output = $name;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn neg(mut self) -> $name {","highlight_start":1,"highlight_end":40},{"text":"                self.0.neg(&U256::from($modulus));","highlight_start":1,"highlight_end":51},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                self","highlight_start":1,"highlight_end":21},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/fields/fp.rs:37:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                $name::new(try!(U256::decode(s))).ok_or_else(|| s.error(\"integer is not less than modulus\"))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mfield_impl!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Fr,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        0x43e1f593f0000001,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m211\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0x6586864b4c6911b3c2e1f593efffffff\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m212\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `field_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/fields/fp.rs","byte_start":1092,"byte_end":1095,"line_start":37,"line_end":37,"column_start":28,"column_end":31,"is_primary":true,"text":[{"text":"                $name::new(try!(U256::decode(s))).ok_or_else(|| s.error(\"integer is not less than modulus\"))","highlight_start":28,"highlight_end":31}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"bn/src/fields/fp.rs","byte_start":5638,"byte_end":6194,"line_start":214,"line_end":241,"column_start":1,"column_end":3,"is_primary":false,"text":[{"text":"field_impl!(","highlight_start":1,"highlight_end":13},{"text":"    Fq,","highlight_start":1,"highlight_end":8},{"text":"    [","highlight_start":1,"highlight_end":6},{"text":"        0x3c208c16d87cfd47,","highlight_start":1,"highlight_end":28},{"text":"        0x97816a916871ca8d,","highlight_start":1,"highlight_end":28},{"text":"        0xb85045b68181585d,","highlight_start":1,"highlight_end":28},{"text":"        0x30644e72e131a029","highlight_start":1,"highlight_end":27},{"text":"    ],","highlight_start":1,"highlight_end":7},{"text":"    [","highlight_start":1,"highlight_end":6},{"text":"        0xf32cfc5b538afa89,","highlight_start":1,"highlight_end":28},{"text":"        0xb5e71911d44501fb,","highlight_start":1,"highlight_end":28},{"text":"        0x47ab1eff0a417ff6,","highlight_start":1,"highlight_end":28},{"text":"        0x06d89f71cab8351f","highlight_start":1,"highlight_end":27},{"text":"    ],","highlight_start":1,"highlight_end":7},{"text":"    [","highlight_start":1,"highlight_end":6},{"text":"        0xb1cd6dafda1530df,","highlight_start":1,"highlight_end":28},{"text":"        0x62f210e6a7283db6,","highlight_start":1,"highlight_end":28},{"text":"        0xef7f0b0c0ada0afb,","highlight_start":1,"highlight_end":28},{"text":"        0x20fd6e902d592544","highlight_start":1,"highlight_end":27},{"text":"    ],","highlight_start":1,"highlight_end":7},{"text":"    [","highlight_start":1,"highlight_end":6},{"text":"        0xd35d438dc58f0d9d,","highlight_start":1,"highlight_end":28},{"text":"        0xa78eb28f5c70b3d,","highlight_start":1,"highlight_end":27},{"text":"        0x666ea36f7879462c,","highlight_start":1,"highlight_end":28},{"text":"        0xe0a77c19a07df2f","highlight_start":1,"highlight_end":26},{"text":"    ],","highlight_start":1,"highlight_end":7},{"text":"    0x9ede7d651eca6ac987d20782e4866389","highlight_start":1,"highlight_end":39},{"text":");","highlight_start":1,"highlight_end":3}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"field_impl!","def_site_span":{"file_name":"bn/src/fields/fp.rs","byte_start":203,"byte_end":5077,"line_start":10,"line_end":183,"column_start":1,"column_end":2,"is_primary":false,"text":[{"text":"macro_rules! field_impl {","highlight_start":1,"highlight_end":26},{"text":"    ($name:ident, $modulus:expr, $rsquared:expr, $rcubed:expr, $one:expr, $inv:expr) => {","highlight_start":1,"highlight_end":90},{"text":"        #[derive(Copy, Clone, PartialEq, Eq, Debug)]","highlight_start":1,"highlight_end":53},{"text":"        #[repr(C)]","highlight_start":1,"highlight_end":19},{"text":"        pub struct $name(U256);","highlight_start":1,"highlight_end":32},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl From<$name> for U256 {","highlight_start":1,"highlight_end":36},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn from(mut a: $name) -> Self {","highlight_start":1,"highlight_end":44},{"text":"                a.0.mul(&U256::one(), &U256::from($modulus), $inv);","highlight_start":1,"highlight_end":68},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                a.0","highlight_start":1,"highlight_end":20},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[cfg(feature = \"rustc-serialize\")]","highlight_start":1,"highlight_end":44},{"text":"        impl Encodable for $name {","highlight_start":1,"highlight_end":35},{"text":"            fn encode<S: Encoder>(&self, s: &mut S) -> Result<(), S::Error> {","highlight_start":1,"highlight_end":78},{"text":"                let normalized = U256::from(*self);","highlight_start":1,"highlight_end":52},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                normalized.encode(s)","highlight_start":1,"highlight_end":37},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        #[cfg(feature = \"rustc-serialize\")]","highlight_start":1,"highlight_end":44},{"text":"        impl Decodable for $name {","highlight_start":1,"highlight_end":35},{"text":"            fn decode<S: Decoder>(s: &mut S) -> Result<$name, S::Error> {","highlight_start":1,"highlight_end":74},{"text":"                $name::new(try!(U256::decode(s))).ok_or_else(|| s.error(\"integer is not less than modulus\"))","highlight_start":1,"highlight_end":109},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl $name {","highlight_start":1,"highlight_end":21},{"text":"            pub fn from_str(s: &str) -> Option<Self> {","highlight_start":1,"highlight_end":55},{"text":"                let ints: Vec<_> = {","highlight_start":1,"highlight_end":37},{"text":"                    let mut acc = Self::zero();","highlight_start":1,"highlight_end":48},{"text":"                    (0..11).map(|_| {let tmp = acc; acc = acc + Self::one(); tmp}).collect()","highlight_start":1,"highlight_end":93},{"text":"                };","highlight_start":1,"highlight_end":19},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                let mut res = Self::zero();","highlight_start":1,"highlight_end":44},{"text":"                for c in s.chars() {","highlight_start":1,"highlight_end":37},{"text":"                    match c.to_digit(10) {","highlight_start":1,"highlight_end":43},{"text":"                        Some(d) => {","highlight_start":1,"highlight_end":37},{"text":"                            res = res * ints[10];","highlight_start":1,"highlight_end":50},{"text":"                            res = res + ints[d as usize];","highlight_start":1,"highlight_end":58},{"text":"                        },","highlight_start":1,"highlight_end":27},{"text":"                        None => {","highlight_start":1,"highlight_end":34},{"text":"                            return None;","highlight_start":1,"highlight_end":41},{"text":"                        }","highlight_start":1,"highlight_end":26},{"text":"                    }","highlight_start":1,"highlight_end":22},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                Some(res)","highlight_start":1,"highlight_end":26},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            /// Converts a U256 to an Fp so long as it's below the modulus.","highlight_start":1,"highlight_end":76},{"text":"            pub fn new(mut a: U256) -> Option<Self> {","highlight_start":1,"highlight_end":54},{"text":"                if a < U256::from($modulus) {","highlight_start":1,"highlight_end":46},{"text":"                    a.mul(&U256::from($rsquared), &U256::from($modulus), $inv);","highlight_start":1,"highlight_end":80},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    Some($name(a))","highlight_start":1,"highlight_end":35},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    None","highlight_start":1,"highlight_end":25},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            /// Converts a U256 to an Fr regardless of modulus.","highlight_start":1,"highlight_end":64},{"text":"            pub fn new_mul_factor(mut a: U256) -> Self {","highlight_start":1,"highlight_end":57},{"text":"                a.mul(&U256::from($rsquared), &U256::from($modulus), $inv);","highlight_start":1,"highlight_end":76},{"text":"                $name(a)","highlight_start":1,"highlight_end":25},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            pub fn interpret(buf: &[u8; 64]) -> Self {","highlight_start":1,"highlight_end":55},{"text":"                $name::new(U512::interpret(buf).divrem(&U256::from($modulus)).1).unwrap()","highlight_start":1,"highlight_end":90},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            /// Returns the modulus","highlight_start":1,"highlight_end":36},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            #[allow(dead_code)]","highlight_start":1,"highlight_end":32},{"text":"            pub fn modulus() -> U256 {","highlight_start":1,"highlight_end":39},{"text":"                U256::from($modulus)","highlight_start":1,"highlight_end":37},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            #[allow(dead_code)]","highlight_start":1,"highlight_end":32},{"text":"            pub fn inv(&self) -> u128 {","highlight_start":1,"highlight_end":40},{"text":"                $inv","highlight_start":1,"highlight_end":21},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            pub fn raw(&self) -> &U256 {","highlight_start":1,"highlight_end":41},{"text":"                &self.0","highlight_start":1,"highlight_end":24},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            pub fn set_bit(&mut self, bit: usize, to: bool) {","highlight_start":1,"highlight_end":62},{"text":"                self.0.set_bit(bit, to);","highlight_start":1,"highlight_end":41},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl FieldElement for $name {","highlight_start":1,"highlight_end":38},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn zero() -> Self {","highlight_start":1,"highlight_end":32},{"text":"                $name(U256::from([0, 0, 0, 0]))","highlight_start":1,"highlight_end":48},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn one() -> Self {","highlight_start":1,"highlight_end":31},{"text":"                $name(U256::from($one))","highlight_start":1,"highlight_end":40},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn random<R: Rng>(rng: &mut R) -> Self {","highlight_start":1,"highlight_end":53},{"text":"                $name(U256::random(rng, &U256::from($modulus)))","highlight_start":1,"highlight_end":64},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn is_zero(&self) -> bool {","highlight_start":1,"highlight_end":40},{"text":"                self.0.is_zero()","highlight_start":1,"highlight_end":33},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            fn inverse(mut self) -> Option<Self> {","highlight_start":1,"highlight_end":51},{"text":"                if self.is_zero() {","highlight_start":1,"highlight_end":36},{"text":"                    None","highlight_start":1,"highlight_end":25},{"text":"                } else {","highlight_start":1,"highlight_end":25},{"text":"                    self.0.invert(&U256::from($modulus));","highlight_start":1,"highlight_end":58},{"text":"                    self.0.mul(&U256::from($rcubed), &U256::from($modulus), $inv);","highlight_start":1,"highlight_end":83},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                    Some(self)","highlight_start":1,"highlight_end":31},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Add for $name {","highlight_start":1,"highlight_end":29},{"text":"            type Output = $name;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn add(mut self, other: $name) -> $name {","highlight_start":1,"highlight_end":54},{"text":"                self.0.add(&other.0, &U256::from($modulus));","highlight_start":1,"highlight_end":61},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                self","highlight_start":1,"highlight_end":21},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Sub for $name {","highlight_start":1,"highlight_end":29},{"text":"            type Output = $name;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn sub(mut self, other: $name) -> $name {","highlight_start":1,"highlight_end":54},{"text":"                self.0.sub(&other.0, &U256::from($modulus));","highlight_start":1,"highlight_end":61},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                self","highlight_start":1,"highlight_end":21},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Mul for $name {","highlight_start":1,"highlight_end":29},{"text":"            type Output = $name;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn mul(mut self, other: $name) -> $name {","highlight_start":1,"highlight_end":54},{"text":"                self.0.mul(&other.0, &U256::from($modulus), $inv);","highlight_start":1,"highlight_end":67},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                self","highlight_start":1,"highlight_end":21},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"","highlight_start":1,"highlight_end":1},{"text":"        impl Neg for $name {","highlight_start":1,"highlight_end":29},{"text":"            type Output = $name;","highlight_start":1,"highlight_end":33},{"text":"","highlight_start":1,"highlight_end":1},{"text":"            #[inline]","highlight_start":1,"highlight_end":22},{"text":"            fn neg(mut self) -> $name {","highlight_start":1,"highlight_end":40},{"text":"                self.0.neg(&U256::from($modulus));","highlight_start":1,"highlight_end":51},{"text":"","highlight_start":1,"highlight_end":1},{"text":"                self","highlight_start":1,"highlight_end":21},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10},{"text":"    }","highlight_start":1,"highlight_end":6},{"text":"}","highlight_start":1,"highlight_end":2}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/fields/fp.rs:37:28\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m37\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m  \u001b[0m\u001b[0m                $name::new(try!(U256::decode(s))).ok_or_else(|| s.error(\"integer is not less than modulus\"))\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m214\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m/\u001b[0m\u001b[0m \u001b[0m\u001b[0mfield_impl!(\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Fq,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m216\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    [\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        0x3c208c16d87cfd47,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m240\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    0x9ede7d651eca6ac987d20782e4866389\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|__-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12min this macro invocation\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: this warning originates in the macro `field_impl` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/fields/fq2.rs","byte_start":1432,"byte_end":1435,"line_start":60,"line_end":60,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"        let combined = try!(U512::decode(s));","highlight_start":24,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/fields/fq2.rs:60:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let combined = try!(U512::decode(s));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"anonymous parameters are deprecated and will be removed in the next edition.","code":{"code":"anonymous_parameters","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/fields/mod.rs","byte_start":522,"byte_end":528,"line_start":29,"line_end":29,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"    fn random<R: Rng>(&mut R) -> Self;","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(anonymous_parameters)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!","code":null,"level":"warning","spans":[],"children":[],"rendered":null},{"message":"for more information, see issue #41686 <https://github.com/rust-lang/rust/issues/41686>","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try naming the parameter or explicitly ignoring it","code":null,"level":"help","spans":[{"file_name":"bn/src/fields/mod.rs","byte_start":522,"byte_end":528,"line_start":29,"line_end":29,"column_start":23,"column_end":29,"is_primary":true,"text":[{"text":"    fn random<R: Rng>(&mut R) -> Self;","highlight_start":23,"highlight_end":29}],"label":null,"suggested_replacement":"_: &mut R","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: anonymous parameters are deprecated and will be removed in the next edition.\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/fields/mod.rs:29:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m    fn random<R: Rng>(&mut R) -> Self;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[33mhelp: try naming the parameter or explicitly ignoring it: `_: &mut R`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: `#[warn(anonymous_parameters)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mwarning\u001b[0m\u001b[0m: this was previously accepted by the compiler but is being phased out; it will become a hard error in the 2018 edition!\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mnote\u001b[0m\u001b[0m: for more information, see issue #41686 <https://github.com/rust-lang/rust/issues/41686>\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/groups/mod.rs","byte_start":5592,"byte_end":5595,"line_start":241,"line_end":241,"column_start":13,"column_end":16,"is_primary":true,"text":[{"text":"            try!(l.encode(s));","highlight_start":13,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/groups/mod.rs:241:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m241\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            try!(l.encode(s));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/groups/mod.rs","byte_start":5840,"byte_end":5843,"line_start":250,"line_end":250,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        try!(self.x.encode(s));","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/groups/mod.rs:250:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m250\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        try!(self.x.encode(s));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/groups/mod.rs","byte_start":5872,"byte_end":5875,"line_start":251,"line_end":251,"column_start":9,"column_end":12,"is_primary":true,"text":[{"text":"        try!(self.y.encode(s));","highlight_start":9,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/groups/mod.rs:251:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m251\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        try!(self.y.encode(s));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/groups/mod.rs","byte_start":6080,"byte_end":6083,"line_start":260,"line_end":260,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"        let l = try!(u8::decode(s));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/groups/mod.rs:260:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m260\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let l = try!(u8::decode(s));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/groups/mod.rs","byte_start":6189,"byte_end":6192,"line_start":264,"line_end":264,"column_start":16,"column_end":19,"is_primary":true,"text":[{"text":"            Ok(try!(AffineG::decode(s)).to_jacobian())","highlight_start":16,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/groups/mod.rs:264:16\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m264\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m            Ok(try!(AffineG::decode(s)).to_jacobian())\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/groups/mod.rs","byte_start":6516,"byte_end":6519,"line_start":274,"line_end":274,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"        let x = try!(P::Base::decode(s));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/groups/mod.rs:274:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m274\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let x = try!(P::Base::decode(s));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"use of deprecated macro `try`: use the `?` operator instead","code":{"code":"deprecated","explanation":null},"level":"warning","spans":[{"file_name":"bn/src/groups/mod.rs","byte_start":6558,"byte_end":6561,"line_start":275,"line_end":275,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"        let y = try!(P::Base::decode(s));","highlight_start":17,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: use of deprecated macro `try`: use the `?` operator instead\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0mbn/src/groups/mod.rs:275:17\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m275\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m        let y = try!(P::Base::decode(s));\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m| \u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[33m^^^\u001b[0m\n\n"}
{"message":"27 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[33mwarning\u001b[0m\u001b[0m\u001b[1m: 27 warnings emitted\u001b[0m\n\n"}
